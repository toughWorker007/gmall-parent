jw:1. find userInterface in page,thinking and fix a jumpUrl to it;
    2. begin coding in daoImpl,analyze param which need from page.
    2.1. service()传参数id时可以传String,service层在将参数统一封装为Bean时再转为	Integer；或者不封装直接转Integer,视情况.
    3.get请求直接拼接数据，没请求体。
页面格式选择：html比jsp轻量，内部的oa,办公自动化系统等内部人员使一般使jsp页面。正常的互联网使html页面更优（fast,fenli）;
jsp：
1.2. 3. 项目中加入的新jsp页面无法被跳转时(404),rebuild artifact即可解决(别build,是rebuild)；
1.1. xjsp extends HttpJspBase extends HttpServlet.(C:\Users\Legion\AppData\Local\JetBrains\IntelliJIdea2020.1\tomcat\Unnamed_book-xx_2\work\Catalina\localhost\BookStore02\org\apache\jsp\pages\user);
1. html页面手动改成jsp页面时，重命名之前先在首行加上<%@ page contentType="text/html;charset=UTF-8"%>,不然会乱码。
2. <base href="<%=request.getContextPath()%>/">(前没有/后有/)；

el(expression language):
1.5。 el表达式可用在页面内的双引号里。
1.3 赋值时,el(输出表达式)不可取代<%=%>;(例如:<input type="text" value="<%=string%>">;不可value="${string}";)
1.2. EL表达式在字符串里页生效，在""里也生效。
1.1 EL表达式拿值，值不存在时，输出为空。
1. el表达式，只用来简化<%=%>，且只能读取不能修改。${key},在域中du取数据。
2. el可用关键字empty检验是否为空:(null,"",empty list);
3. servlet/jsp<%=%>:1. request.getContextPath();2. request.getSession().getId();
3.1 el表达式:${pageContext.request.ContextPath};${pageContext.session.id};

cookie&session:
0.2. session是 server创建的，一般开发工具都有session保护，session保护开启之后server重启或重新部署就会钝化session.
0.1 idea开发工具不勾选preserv session选项时，重新部署一下环境或者重启了服务器，session就失效了。
0. cookie与session的创建本来互不相关,不过server创建session时会生成一个特殊的cookie对象(JSESSIONID-sessionObj);并将此特殊cookie响应给浏览器。
1. cookie保存数据，用application域也可以。不过application域不能设置指定时间后自动失效。
2. session默认存活分钟，关闭浏览器时就算不到三十分钟也直接没了(因为cookie默认存活为session会话级别，关闭时cookie没了，里面的特殊cookie(JSESSIONID-sessionObj)没了，找不到这个session对象了)。
3. cookie默认会话级别(不关闭浏览器不换浏览器)，当前服务器路径下各子路径都有效。
5. 想持久化session，必须先持久化cookie,因为要凭特殊的cookie(JSESSIONID=SESSIONID)找session。

Filter&Listener
1. wem.xml文件里的filter过滤顺序为<filter-mapping>的出现顺序。注解方式时依照字母(abcd)排序。

json&ajax

附注一点js:js弱类型语言，js类型只有1. 基本数据类型2.复杂类型(1bean,2.数组3，null,4undifined);
0. JSON三条（一个jsonArr可以有多个jsonObj,一个jsonObj可以有多个k:v）：
	1.格式：json对象{k:v,k:v...};json数组[JO1,JO2...];两种格式：一个是花括号，一个是方括号。不知道是什么格式时，Ajax先以text格式接收，看到之后再决定怎么处理。
	2.解析：jsonObj.key;JsonArr:for循环遍历；
	3.java对象转JSON：1.bean&map->JsonObj;list->JsonArr;
1. 以字符串为中介使jsObject与javaObject互转。
2. 回应ajax的数据为一条时可能回应一个文本格式，回应多条数据时一般封装为u东哥jsonObject.
3. jq对js的ajax有三层封装：1.$.ajax();2.$.get/post();$.getJson/Script();
3.1. ajax异步请求，不阻塞用户对网页其他元素操作，ajax同步请求，阻塞用户操作其他元素，可是也不刷新页面。
5. ie浏览器最先支持ajax,它内核有一个activeX的东西，先获得ActiveX才可拿到XmlHttpRequest对象。可其他浏览器XmlHttpRequest对象直接是作为一个浏览器对象存在的，直接new就行。
5.1. 谷歌浏览器使用$.ajax时，有一个datatype(预期的返回结果类型：无论服务器返回什么类型，浏览器都当作自己指定的类型去接收(要尝试转换)。)属性写不写都可，火狐要写。
6. ajax请求访问mvc的方法时，方法一般没返回值。return "str";是跳转页面，ajax一般不跳转页面。